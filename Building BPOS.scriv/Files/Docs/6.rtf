{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Baskerville;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qj

\f0\fs24 \cf0 This is a step by step guide to creating a simple operating system for the Raspberry Pi.  It\'92s based on 
\i Baking Pi - Operating System Development
\i0  from the University of Cambridge Computer Laboratory.  However, this book departs from that tutorial in that everything that can be done in C is done in C.  This allows us to concentrate on writing the operating system instead of learning ARM assembler. \
\
This first part of the book explains how to set up your development environment and provides the stub for   later development.  Subsequent parts discuss other nice OS features and how to implement them.  The end objective is a multitasking pre-emptive operating system with virtual memory support.\
\
What do you need to know to understand this book?  Well, an understanding of C at some level is probably essential.  Also, it would help to know something of compiling and linking and you\'92ll need a passing understanding of assembler.  \
\
To run the code, you need a Raspberry Pi and an SD card with a Raspberry Pi distribution on it.  I am using Raspbian which is a Linux distribution that is optimised for the Raspberry Pi.  You don\'92t actually have to understand anything about the distribution because we are only using the files that are needed to boot the kernel.  The rest of it, including the kernel image itself, we are ignoring.}