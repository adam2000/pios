<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<SearchIndexes Version="1.0">
    <Documents>
        <Document ID="36">
            <Title>Hello World</Title>
            <Synopsis>Steps to get a program up and running on the Pi</Synopsis>
        </Document>
        <Document ID="11">
            <Title>Title Page</Title>
            <Synopsis>Title page to the manuscript.</Synopsis>
            <Text>Jeremy Pereira
(Contact info)

(Your agent’s name)
(Your agent’s address)
&lt;$wc100> words










&lt;$projecttitle>

by &lt;$fullname></Text>
            <Notes>This is the title page of the manuscript. Note that “Compile As-Is” is ticked - this ensures that the title page’s formatting doesn’t get changed during the Compile process, even though the formatting of other text documents will be overridden to use a standard 12-point manuscript font.

The &lt;$projecttitle> and &lt;$fullname> tags get replaced with the information set in Project > Meta-Data Settings… > Project Properties. You can edit those settings or just replace this text altogether. (Other information is taken from Address Book when the project is created.)</Notes>
        </Document>
        <Document ID="37">
            <Title>Operating System Principles</Title>
            <Synopsis>In which we discuss some general principles of operating systems like pre-emptive multitasking and virtual memory.</Synopsis>
        </Document>
        <Document ID="4">
            <Title>Beginning</Title>
            <Synopsis>In which we explain what we are doing and how to get started with your development environment.</Synopsis>
        </Document>
        <Document ID="27">
            <Title>Ideas</Title>
        </Document>
        <Document ID="12">
            <Title>Non-Fiction Format</Title>
            <Text>GENERAL NON-FICTION (STANDARD MANUSCRIPT FORMAT)

About This Template
When compiled (File > Compile), this project will generate a document in the standard manuscript format used for many types of non-fiction.

How To Use This Template
	•	Edit the Title Page document to ensure it contains the correct information.
	•	Create a new folder for each chapter and title each folder with the name of the chapter. If you don’t intend to use chapter names, just use something descriptive that tells you what the chapter is about. (You do not need to title the folders “Chapter One” and so on, as chapter numbering will be taken care of automatically during the Compile process.) The first chapter folder has been created for you with the placeholder title “Chapter Subtitle”.
	•	Create a new text document for each sub-section within the chapter folders. (Upon export or print, these sub-sections will be separated with the “#” character.)
	•	If you don’t require a foreword, move the “Foreword” document to the Trash folder. Alternatively, rename it “Preface” or “Introduction” if you prefer. If you would rather the foreword come after the table of contents - as is sometimes the case - drag the “Foreword” document and drop it below the “Contents” document.
	•	Before compiling, to create your table of contents, simply select all documents you wish to be included in the contents listing (usually this will be the “Foreword”, all chapter folders, and “Endnotes”, but not the individual sections inside chapter folders), then go to Edit > Copy Special > Copy Documents as ToC. Then paste into the “Contents” document (use Edit > Paste and Match Style to paste without the dotted underline between the chapter names and page numbers). The resulting linked text and page number tags will be replaced with the final chapter names and page numbers in the compiled document. You don’t need to do this every time you compile, just when chapters have been added, deleted, renamed or moved around. (Note to Microsoft Word users: If you export to Word, you may need to generate a print preview in Word to force the page numbers to show up correctly - they may appear as question marks before doing so.)
	•	If you have no footnotes or endnotes in your text, be sure to delete the “Endnotes” document.
	•	“Notes” and “Ideas” folders have been provided for your convenience, although you can replace them or create different top-level folders for your research materials if necessary (these are just regular folders that have had custom icons assigned to them using the Documents > Change Icon feature.)
	•	Compile your manuscript into standard manuscript format by selecting File > Compile.

Tables and Figures
If you need to use tables or figures in your manuscript, you can refer to them using the following tags, replacing “KEYWORD” with a unique word that identifies your table or figure.

!fig(KEYWORD)
!table(KEYWORD)

For instance, consider the following text, which makes use of such tags.

Table !table(sales): Sales 2011
Table !table(dates): Shipment dates
Figure !fig(skeleton): The skeleton of the gnu.
Figure !fig(malcolmreynolds): The second coolest character in Firefly.

… (For sales figures, see table !table(sales))… For shipment dates, see table !table(dates)… where he discovered the skeleton of a gnarled gnu (see figure !fig(skeleton))… Chronicles providing a similar role, albeit without the Castle actor (see figure !fig(malcolmreynolds)).

In the compiled document, the above text would look like this:

Table 1: Sales 2011
Table 2: Shipment dates
Figure 1: The skeleton of the gnu.
Figure 2: The second coolest character in Firefly.

… (For sales figures, see table 1)… For shipment dates, see table 2… where he discovered the skeleton of a gnarled gnu (see figure 1)… Chronicles providing a similar role, albeit without the Castle actor (see figure 2).

Making Changes
There are various minor changes you can make to the settings to tweak this template so that it better suits your needs, as follows:
	•	Chapter subtitles: If you don’t want to include the names of your chapter folders below the chapter numbering text in the compiled document, go to the “Formatting” pane in the Compile sheet and deselect “Title” in the list of elements to include.
	•	Page header: You can edit the page header in the “Page Settings” pane of the Compile sheet.
	•	Font: Use “Quick Font Override” in Compile to change the font used throughout the final document.
	•	Working with chapters instead of smaller sub-sections: By default, this project is set up so that you write each sub-section of a chapter as a separate text document. If you don’t like to break things up quite that much, though, you can equally write a whole chapter in a single text document within each “Chapter” folder.

Sample Document
See the “Sample MS” PDF file in the Research folder for an example of a document that has been created using this template.

Final Note
Scrivener project templates are flexible and are not intended to restrict you to a particular workflow. You can change, delete or move the files and folders contained in the template, and you can create your own templates by setting up a skeletal project with the files, folders and settings you would like to use for new projects and using File > Save As Template.</Text>
        </Document>
        <Document ID="6">
            <Title>Introduction</Title>
            <Text>This is a step by step guide to creating a simple operating system for the Raspberry Pi.  It’s based on Baking Pi - Operating System Development from the University of Cambridge Computer Laboratory.  However, this book departs from that tutorial in that everything that can be done in C is done in C.  This allows us to concentrate on writing the operating system instead of learning ARM assembler. 

This first part of the book explains how to set up your development environment and provides the stub for   later development.  Subsequent parts discuss other nice OS features and how to implement them.  The end objective is a multitasking pre-emptive operating system with virtual memory support.

What do you need to know to understand this book?  Well, an understanding of C at some level is probably essential.  Also, it would help to know something of compiling and linking and you’ll need a passing understanding of assembler.  

To run the code, you need a Raspberry Pi and an SD card with a Raspberry Pi distribution on it.  I am using Raspbian which is a Linux distribution that is optimised for the Raspberry Pi.  You don’t actually have to understand anything about the distribution because we are only using the files that are needed to boot the kernel.  The rest of it, including the kernel image itself, we are ignoring.</Text>
            <Comments>http://www.cl.cam.ac.uk/freshers/raspberrypi/tutorials/os/
http://www.raspberrypi.org
http://www.raspberrypi.org/downloads</Comments>
        </Document>
        <Document ID="34">
            <Title>Sample MS</Title>
            <Text>Amy Nonomusse Your manuscript should have your address and contact details on the first page only.
If you have an agent, your agent's address can be included beneath.
Non-Fiction Standard Manuscript Format by A. Nonomusse
1,000 words
Contents
Foreword Chapter 1 - Folder Names Become Subtitles Chapter 2 - Another Chapter Folder Endnotes
3 4 6 8
NonFiction PDF/Nonomusse
2
Foreword
Non-fiction works often feature a foreword or preface. This usually comes after the table of contents, but not always--sometimes the foreword precedes the table of contents. You should move the "Foreword" document to wherever you want in the "General Non-Fiction" template, rename it to "Preface" or "Introduction", or delete it entirely, depending on your requirements.
The table of contents is generated using Scrivener's Edit > Copy Special > Copy Documents as ToC feature. You simply select the documents in the binder that you want to include in your table of contents, select "Copy Documents as ToC" from the Edit > Copy Special menu, and then hit Edit > Paste (cmd-V) in the "Contents" document; alternatively, use Edit > Paste and Match Style (shift-opt-cmd-V) to paste without the dotted underline between chapter titles and page numbers. The results won't look much in Scrivener's editor - a bunch of linked text with "&lt;$p>" page number tags after it - but when compiled this will become a proper table of contents using the correct chapter titles. Remember to update your table of contents if you move, add, delete or rename any chapters.
NonFiction PDF/Nonomusse	3
Chapter 1 Folder Names Become Subtitles
Standard manuscript format is often required for non-fiction so that work can easily be read by editors. It allows editors to estimate word count and determine roughly how many pages will be required to produce a book using the page size, style and font used by their house.1 This PDF file was generated using Scrivener's Compile feature and was created using the "General Non-Fiction" project template.
Manuscripts for full-length books require a separate title page. The author's name, address, telephone number and e-mail address should be shown in the upper-left corner of the title page, single-spaced. The title of the work should appear about half-way down the page. The author's name follows the title on the by-line as the author wants it to appear when published. A real name or pseudonym may be used and may include initials, actual given name or professional designation.
A table of contents and foreword, preface or introduction may follow the title page, preceding the main text.
All text should be double-spaced and left-justified with a ragged right margin. Paragraphs should be indented by about five spaces (half an inch) and not separated by an
NonFiction PDF/Nonomusse	4
additional blank line. (It used to be traditional to separate each sentence with two spaces, but in these days of word processors this is now less common.) A 12-point font such as Courier, Times New Roman or Arial should be used throughout. In Scrivener, however, you can write using any font and formatting you choose--the "Formatting" pane of the Compile sheet can be used to change the formatting in the compiled document. In the "General Non-Fiction" project template, the Compile settings will deal with changing the font and formatting to those required for standard manuscript format.
Top, bottom, left and right margins should all be approximately one inch, not allowing for the page header. Each page except for the title page should include a header comprising the author's real surname, the title of the work (or a key word from the title), and the page number. In Scrivener, all of this is handled in the "Page Settings" pane of the Compile sheet.
# Section breaks within chapters are indicated with the hash character. Do not simply
add an extra line space as this can be missed by the typesetter. The "Separators" pane of Scrivener's Compile sheet can handle this for you if you are writing the sections within each chapter as separate text documents.
Many editors prefer italics to be indicated by underlining, which can be achieved by ticking "Convert italics to underlines" in the "Transformations" pane of Compile. This is ticked by default, so be sure to un-tick it if you require italic text in the final manuscript.
NonFiction PDF/Nonomusse	5
Chapter 2 Another Chapter Folder
Begin each new chapter on a new page like this with the chapter number about a third of the way down the page. In Scrivener, this can all be dealt with in the Compile settings. The "Separators" pane of the Compile sheet can be set to start a new page for each chapter folder, and the "Formatting" pane can be used to add page padding at the top of the new page and insert the chapter number (the latter using the "Level Settings"). All of this has already been done for you in the "General Non-Fiction" project template.
Although it is often said that writers should not use the word-count features of their computers to determine the number of words in a manuscript, most publishers and editors will happily accept a word processor word count these days. In Scrivener, you can insert a word count of your manuscript by using Edit > Insert > Draft Word Count (for a manuscript, you may wish to have the word count rounded to the nearest 100, in which case select Edit > Insert > Draft Word Count > Rounded To Nearest 100--this feature is used on the title page of this manuscript, in fact). Note that the actual word count will not be inserted, but a tag that will be substituted for the word count upon export or print.
#
NonFiction PDF/Nonomusse	6
Footnotes should generally be numbered sequentially throughout the manuscript and appear as endnotes at the very end.2 However, different editors and publishers have different requirements when it comes to footnotes, so you should always check the submission guidelines.3
In reality, the formatting of a manuscript is often only really crucial when submitting directly to a publisher--first time authors will usually submit to an agent first, and agents are often less picky about format and will point you in the right direction before submitting your work to a publisher.
NonFiction PDF/Nonomusse	7
Endnotes
1. Much of the information contained in this document is based on a description of novel manuscript format by Matt Carless for the BBC Writers' Room website (http:// www.bbc.co.uk/writersroom), along with various web resources describing non-fiction manuscript format (the basics of standard manuscript format is commonly used for both fiction and non-fiction).
2. Useful information about non-fiction manuscript formatting was also taken from this web page: http://calemccaskey.blogspot.com/2011/05/how-to-prepare-non-fiction-manuscript.html 3. Note that if you require more advanced footnote and endnote layout, or if you require indexes, you should compile to RTF format and open the generated RTF file in your word processor of choice for a final pass.
NonFiction PDF/Nonomusse	8
</Text>
        </Document>
        <Document ID="28">
            <Title>Notes</Title>
        </Document>
        <Document ID="30">
            <Title>Foreword</Title>
        </Document>
        <Document ID="29">
            <Title>Endnotes</Title>
            <Text> All footnotes will get inserted here upon print, and this bubble will be removed automatically.</Text>
        </Document>
        <Document ID="35">
            <Title>Development Environment</Title>
            <Synopsis>Discussion of requirements for compiling and linking the code</Synopsis>
            <Text>We need to compile code.  For the ARM processor.  You could do it on the Raspberry Pi itself, but that is somewhat inconvenient since to test your code, you’ll need to shut down your dev environment.  </Text>
        </Document>
        <Document ID="31">
            <Title>Contents</Title>
        </Document>
    </Documents>
</SearchIndexes>